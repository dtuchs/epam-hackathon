plugins {
    id 'java-library'
}

repositories {
    mavenCentral()
}

def junitVersion = "5.8.0"
def junitPlatformVersion = "1.8.0"

dependencies {
    implementation(
            "io.github.bonigarcia:webdrivermanager:5.0.2",
            "org.seleniumhq.selenium:selenium-java:4.0.0-rc-1",
            "org.apache.commons:commons-lang3:3.12.0",
            "org.projectlombok:lombok:1.18.20",
            'org.assertj:assertj-core:3.20.2',
            "io.cucumber:cucumber-junit-platform-engine:6.11.0",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.junit.platform:junit-platform-launcher:$junitPlatformVersion"
         )
    testImplementation(
            'io.cucumber:cucumber-java8:6.11.0',
            'io.cucumber:cucumber-java:6.11.0',
            "org.aeonbits.owner:owner:1.0.12",
            "com.github.javafaker:javafaker:1.0.2")
    testRuntimeOnly(
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    if (System.getProperty("threads") != null) {
        systemProperties += [
                'junit.jupiter.execution.parallel.enabled'                 : true,
                'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
                'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
                'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
                'junit.jupiter.execution.parallel.config.fixed.parallelism': System.getProperty("threads").toInteger()
        ]
    }

    testLogging {
        lifecycle {
//            events "started", "failed"
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}
